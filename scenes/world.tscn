[gd_scene load_steps=13 format=3 uid="uid://ifwq3geifvtp"]

[ext_resource type="Script" path="res://script/enemy_generator.gd" id="1_7djdm"]
[ext_resource type="PackedScene" uid="uid://c1nuygk5f3vma" path="res://scenes/tilemap_scene.tscn" id="1_grwk2"]
[ext_resource type="PackedScene" uid="uid://choyge02xkei7" path="res://scenes/player.tscn" id="2_vx5u1"]
[ext_resource type="Script" path="res://script/camera_2d.gd" id="3_fm33l"]
[ext_resource type="PackedScene" uid="uid://gmu2dupf71i8" path="res://scenes/pause_menu.tscn" id="5_ecj2u"]
[ext_resource type="Script" path="res://script/stats.gd" id="5_qmb43"]
[ext_resource type="PackedScene" uid="uid://bv778lh3d7ppd" path="res://scenes/level_up_interface.tscn" id="7_81lfr"]
[ext_resource type="PackedScene" uid="uid://cd4t4iidtkdlk" path="res://scenes/hud.tscn" id="8_tfaip"]
[ext_resource type="Script" path="res://script/game_context.gd" id="9_qnmlx"]

[sub_resource type="GDScript" id="GDScript_vhok5"]
script/source = "extends Node2D  
@onready var player = get_node(\"/root/World/Player\")
@onready var enemy_generator = get_node(\"/root/World/EnemyGenerator\")
@onready var stats = get_node(\"/root/World/Stats\")
var is_paused = false  # A flag to track the pause state
var is_level_uping = false # A flag to track the level up state
var notOver =true # A flag to track the game state
var statNumber = 6 # Number of existing player stats
var weaponsNumber = 2 # Number of weapons
var maxStatsLevel = 5 # Max level of player stats
var maxWeaponLevel = 8 # Max level of player stats
#signal level_options(option_1, option_2, option_3)
signal level_options(options_available)

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.

func _process(delta):
	#print(\"Projectile : \" ,stats.fire_projectile_since_start )
	#print(\"Dead Enemy : \" ,enemy_generator.dead_enemy_since_start )
	#print(\"Dolarz : \" ,stats.experience )
	if Input.is_action_just_pressed(\"Pause\"):  # \"ui_cancel\" is the Esc key by default
		toggle_pause()

# Function to toggle pause for all children and their descendants
func toggle_pause():
	is_paused = !is_paused
	if is_paused && notOver:
		$UI/Pause_Menu.show()
	else:
		$UI/Pause_Menu.hide()
	if notOver:
		_set_children_process(self, is_paused)
		
# Function to toggle the levelup interface and stop entity during that time
func toggle_level_up():
	is_level_uping = !is_level_uping
	if is_level_uping && notOver:
		setLevelUpInterface()
		$UI/LevelUpInterface.show()
	else:
		$UI/LevelUpInterface.hide()
	if notOver:
		_set_children_process(self, is_level_uping)

# Function to set the level up interface button
func setLevelUpInterface():
	## Get every level up options
	
	# Get every stats and weapons level the player currently have
	var availables_options = []
	for stat in range(statNumber):
		var statsLevel = player.player_stats.getStatsLevel(stat)
		
		# Check if stat exists
		if (statsLevel == -1):
			continue
		
		# Keep only stats that can level up
		# If stats below her max level it is an options
		if (statsLevel < maxStatsLevel):
			availables_options.append(stat)
	
	for weapon in range(weaponsNumber):
		if player.weapon_stats.weapon_level[weapon] < maxWeaponLevel:
			availables_options.append(weapon+statNumber)
	
	## Choose 3 options
	availables_options.shuffle()
	availables_options = availables_options.slice(0, 3)
	availables_options.sort()
	
	## Emit them
	level_options.emit(availables_options)

# Function to increase weapon or stat level depending on id
func increaseStatOrWeaponsLevel(id: int):
	if(id < statNumber):
		increaseStatLevel(id)
	else:
		increaseWeaponLevel(id)

func increaseStatLevel(id: int):
	player.player_stats.increaseStatsLevel(id)
	player.update_player_stat()
	
# Increase or get new weapon
func increaseWeaponLevel(id: int):
	# Check if the player has the weapon
	var weapon_id = id - statNumber
	if (player.weapon_stats.weapon_level[weapon_id] == -1):
		player.addWeapons(weapon_id)
	else:
		player.weapon_stats.weapon_level[weapon_id] += 1

# Recursively set process, physics_process, and animation playback for all children and grandchildren
func _set_children_process(node: Node, pause: bool):
	for child in node.get_children():
		if child is Node2D or child is Area2D:  # Adjust depending on what nodes you need to pause
			child.set_process(not pause)
			child.set_physics_process(not pause)
		if child is AnimatedSprite2D:
			child.speed_scale = 0 if pause else 1  # Pause or resume animations
		if child is RigidBody2D:
			child.set_sleeping( pause)
		if child is Timer:
			child.set_paused( pause) 
		# Recursively pause/resume all children
		if child.get_child_count() > 0:
			_set_children_process(child, pause)
			# Recursively pause/resume children of children (grandchildren)
			#if child.get_child_count() > 0:
			#	child._set_children_process(pause)


func _on_player_level_gained(level: Variant) -> void:
	if (level > 1):
		toggle_level_up()
		pass
		#toggle_pause()


func _on_world_timer_timeout() -> void:
	var UI = get_node(\"UI\")
	UI.get_node(\"Pause_Menu\").hide()
	get_node(\"HUD\").hide()
	_set_children_process(self,true)
	notOver=false
	var GameOver= preload(\"res://scenes/end_victory.tscn\").instantiate()
	UI.add_child(GameOver)


func _on_player_player_died() -> void:
	var UI = get_node(\"UI\")
	UI.get_node(\"Pause_Menu\").hide()
	get_node(\"HUD\").hide()
	_set_children_process(self,true)
	notOver=false
	var GameOver= preload(\"res://scenes/end.tscn\").instantiate()
	UI.add_child(GameOver)


func _on_pause_menu_return_game() -> void:
	toggle_pause()
	AudioManager.pause_music()
	


func _on_level_up_interface_choice_1(option_chosen: Variant) -> void:
	increaseStatOrWeaponsLevel(option_chosen)
	toggle_level_up()


func _on_level_up_interface_choice_2(option_chosen: Variant) -> void:
	increaseStatOrWeaponsLevel(option_chosen)
	toggle_level_up()


func _on_level_up_interface_choice_3(option_chosen: Variant) -> void:
	increaseStatOrWeaponsLevel(option_chosen)
	toggle_level_up()
"

[sub_resource type="NavigationPolygon" id="NavigationPolygon_m0080"]
vertices = PackedVector2Array(1317.96, -303.203, 1313.03, 923.031, -164.688, 928.953, -127.289, -332.789)
polygons = Array[PackedInt32Array]([PackedInt32Array(0, 1, 2, 3)])
outlines = Array[PackedVector2Array]([PackedVector2Array(-136.999, -343, 1328, -313, 1323, 933.001, -174.999, 939.001)])

[sub_resource type="RectangleShape2D" id="RectangleShape2D_58m6i"]
size = Vector2(1121, 619)

[node name="World" type="Node2D"]
script = SubResource("GDScript_vhok5")

[node name="TilemapScene" parent="." instance=ExtResource("1_grwk2")]

[node name="Background" type="Node2D" parent="."]

[node name="EnemyGenerator" type="Node2D" parent="."]
position = Vector2(566, 322)
script = ExtResource("1_7djdm")

[node name="Player" parent="." instance=ExtResource("2_vx5u1")]
position = Vector2(581, 330)

[node name="NavigationRegion2D" type="NavigationRegion2D" parent="Player" groups=["NavZone"]]
position = Vector2(-1760.61, -1000)
scale = Vector2(3.0303, 3.0303)
navigation_polygon = SubResource("NavigationPolygon_m0080")

[node name="Area2D" type="Area2D" parent="Player/NavigationRegion2D"]
position = Vector2(-8, 0)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player/NavigationRegion2D/Area2D"]
position = Vector2(580.5, 327.5)
shape = SubResource("RectangleShape2D_58m6i")
disabled = true

[node name="Camera2D" type="Camera2D" parent="."]
script = ExtResource("3_fm33l")

[node name="Stats" type="Node2D" parent="."]
script = ExtResource("5_qmb43")

[node name="UI" type="CanvasLayer" parent="."]

[node name="Pause_Menu" parent="UI" instance=ExtResource("5_ecj2u")]
visible = false

[node name="LevelUpInterface" parent="UI" instance=ExtResource("7_81lfr")]
visible = false

[node name="HUD" parent="." instance=ExtResource("8_tfaip")]

[node name="GameContext" type="Node" parent="."]
script = ExtResource("9_qnmlx")

[node name="WorldTimer" type="Timer" parent="GameContext"]
wait_time = 30.0

[connection signal="level_options" from="." to="UI/LevelUpInterface" method="_on_world_level_options"]
[connection signal="enemy_died" from="EnemyGenerator" to="HUD" method="_on_enemy_generator_enemy_died"]
[connection signal="dollar_gained" from="Player" to="HUD" method="_on_player_dollar_gained"]
[connection signal="level_gained" from="Player" to="." method="_on_player_level_gained"]
[connection signal="level_gained" from="Player" to="HUD" method="_on_player_level_gained"]
[connection signal="money_gained" from="Player" to="Player" method="_on_money_gained"]
[connection signal="money_gained" from="Player" to="Stats" method="_on_player_money_gained"]
[connection signal="player_died" from="Player" to="." method="_on_player_player_died"]
[connection signal="xp_gained" from="Player" to="HUD" method="_on_player_xp_gained"]
[connection signal="return_game" from="UI/Pause_Menu" to="." method="_on_pause_menu_return_game"]
[connection signal="choice_1" from="UI/LevelUpInterface" to="." method="_on_level_up_interface_choice_1"]
[connection signal="choice_2" from="UI/LevelUpInterface" to="." method="_on_level_up_interface_choice_2"]
[connection signal="choice_3" from="UI/LevelUpInterface" to="." method="_on_level_up_interface_choice_3"]
[connection signal="current_time" from="GameContext" to="HUD" method="_on_game_context_current_time"]
[connection signal="timeout" from="GameContext/WorldTimer" to="." method="_on_world_timer_timeout"]
